# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestNewCustomer():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_new_customer(self):
        # Test name: newcustomer
        # Step # | name | target | value
        # 1 | open | /administration/index.php?controller=AdminLogin&logout=1&token
        # =3deebcee19462d022fce30e0c508cba5 |
        self.driver.get("http://34.118.122.203/administration/index.php?controller"
                        "=AdminLogin&logout=1&token=3deebcee19462d022fce30e0c508cba5")
        # 2 | setWindowSize | 1360x816 |
        self.driver.set_window_size(1360, 816)
        # 3 | click | id=email |
        self.driver.find_element(By.ID, "email").click()
        # 4 | type | id=email | bichisclaudiu88@gmail.com
        self.driver.find_element(By.ID, "email").send_keys("bichisclaudiu88@gmail.com")
        # 5 | click | id=passwd |
        self.driver.find_element(By.ID, "passwd").click()
        # 6 | type | id=passwd | 123456789
        self.driver.find_element(By.ID, "passwd").send_keys("123456789")
        # 7 | sendKeys | id=passwd | ${KEY_ENTER}
        self.driver.find_element(By.ID, "passwd").send_keys(Keys.ENTER)
        self.driver.implicitly_wait(4)
        # 8 | mouseOver | css=.col-xs-4:nth-child(2) |
        element = self.driver.find_element(By.CSS_SELECTOR, ".col-xs-4:nth-child(2)")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        # 9 | mouseOut | css=.col-xs-4:nth-child(2) |
        element = self.driver.find_element(By.CSS_SELECTOR, "body")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        self.driver.implicitly_wait(4)
        # 10 | click | css=#subtab-AdminParentCustomer span |
        self.driver.find_element(By.CSS_SELECTOR, "#subtab-AdminParentCustomer span").click()
        # 11 | click | linkText=Customers |
        self.driver.find_element(By.LINK_TEXT, "Customers").click()
        # 12 | click | id=page-header-desc-configuration-add |
        self.driver.find_element(By.ID, "page-header-desc-configuration-add").click()
        # 13 | click | id=customer_first_name |
        self.driver.find_element(By.ID, "customer_first_name").click()
        # 14 | type | id=customer_first_name | Popescu
        self.driver.find_element(By.ID, "customer_first_name").send_keys("Popescu")
        # 15 | click | id=customer_last_name |
        self.driver.find_element(By.ID, "customer_last_name").click()
        # 16 | type | id=customer_last_name | Ioan
        self.driver.find_element(By.ID, "customer_last_name").send_keys("Ioan")
        # 17 | click | id=customer_email |
        self.driver.find_element(By.ID, "customer_email").click()
        # 18 | type | id=customer_email | ioanpopescu@gmail.com
        self.driver.find_element(By.ID, "customer_email").send_keys("ioanpopescu@gmail.com")
        # 19 | click | id=customer_password |
        self.driver.find_element(By.ID, "customer_password").click()
        # 20 | type | id=customer_password | 123456789
        self.driver.find_element(By.ID, "customer_password").send_keys("123456789")
        # 21 | click | id=customer_birthday_year |
        self.driver.find_element(By.ID, "customer_birthday_year").click()
        # 22 | select | id=customer_birthday_year | label=1988
        dropdown = self.driver.find_element(By.ID, "customer_birthday_year")
        dropdown.find_element(By.XPATH, "//option[. = '1988']").click()
        # 23 | click | id=customer_birthday_month |
        self.driver.find_element(By.ID, "customer_birthday_month").click()
        # 24 | select | id=customer_birthday_month | label=09
        dropdown = self.driver.find_element(By.ID, "customer_birthday_month")
        dropdown.find_element(By.XPATH, "//option[. = '09']").click()
        # 25 | click | id=customer_birthday_day |
        time.sleep(2)
        self.driver.find_element(By.ID, "customer_birthday_day").click()
        # 26 | select | id=customer_birthday_day | label=16
        dropdown = self.driver.find_element(By.ID, "customer_birthday_day")
        dropdown.find_element(By.XPATH, "//option[. = '16']").click()
        time.sleep(2)
        # 27 | click | id=save-button |
        self.driver.find_element(By.ID, "save-button").click()
        time.sleep(3)
        assert 'Successful creation.' in self.driver.page_source
