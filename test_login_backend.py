# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestLoginBackend():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_login_backend(self):
    # Test name: login_backend
    # Step # | name | target | value
    # 1 | open | /administration/index.php?controller=AdminLogin&logout=1&token=3deebcee19462d022fce30e0c508cba5 | 
    self.driver.get("http://34.118.122.203/administration/index.php?controller=AdminLogin&logout=1&token=3deebcee19462d022fce30e0c508cba5")
    # 2 | setWindowSize | 1360x816 | 
    self.driver.set_window_size(1360, 816)
    # 3 | click | id=email | 
    self.driver.find_element(By.ID, "email").click()
    # 4 | type | id=email | bichisclaudiu88@gmail.com
    self.driver.find_element(By.ID, "email").send_keys("bichisclaudiu88@gmail.com")
    # 5 | click | id=passwd | 
    self.driver.find_element(By.ID, "passwd").click()
    # 6 | type | id=passwd | 123456789
    self.driver.find_element(By.ID, "passwd").send_keys("123456789")
    # 7 | click | id=submit_login | 
    self.driver.find_element(By.ID, "submit_login").click()
    # 8 | mouseOver | id=submit_login | 
    element = self.driver.find_element(By.ID, "submit_login")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    time.sleep(3)
    assert 'content' in self.driver.page_source

